import mergeDeep from "../process/mergeDeep";
import baseMap from "./base.json";
import en from "./en-us.json";
import fr from "./fr-fr.json";

export interface ILanguageAffinity {
  Force: string;
  Magic: string;
  Spirit: string;
  Void: string;
}

export interface ILangageArena {
  bronze1: string;
  bronze2: string;
  bronze3: string;
  bronze4: string;
  silver1: string;
  silver2: string;
  silver3: string;
  silver4: string;
  gold1: string;
  gold2: string;
  gold3: string;
  gold4: string;
  platinium: string;
}

export interface ILanguageChampion {
  Abbess: string;
  Acolyte: string;
  Adjudicator: string;
  Admonitor: string;
  Adriel: string;
  Aina: string;
  Alika: string;
  Altan: string;
  Alure: string;
  Amarantine_Skeleton: string;
  Angar: string;
  Anointed: string;
  Aothar: string;
  Apothecary: string;
  Arbalester: string;
  Arbiter: string;
  Arcanist: string;
  Archer: string;
  Aristocrat: string;
  Armiger: string;
  Astralith: string;
  Athel: string;
  Atur: string;
  Avenger: string;
  Avir_the_Alchemage: string;
  Axeman: string;
  Azure: string;
  Bad_el_Kazar: string;
  Baerdal_Fellhammer: string;
  Bandit: string;
  Banshee: string;
  Baron: string;
  Baroth_the_Bloodsoaked: string;
  Basher: string;
  Basileus_Roanas: string;
  Basilisk: string;
  Battle_Sister: string;
  Battlesage: string;
  Beast_Wrestler: string;
  Belanor: string;
  Bellower: string;
  Berserker: string;
  Big_Un: string;
  Black_Knight: string;
  Blind_Seer: string;
  Bloodbraid: string;
  Bloodfeather: string;
  Bloodgorged: string;
  Bloodhorn: string;
  Bloodpainter: string;
  Bogwalker: string;
  Bombardier: string;
  Bone_Knight: string;
  Bonekeeper: string;
  Brakus_the_Shifter: string;
  Broadmaw: string;
  Brute: string;
  Bully: string;
  Bulwark: string;
  Bushi: string;
  Bystophus: string;
  Cagebreaker: string;
  Candraphon: string;
  Canoness: string;
  Captain_Temila: string;
  Cardinal: string;
  Catacomb_Councilor: string;
  Cataphract: string;
  Centurion: string;
  Channeler: string;
  Chaplain: string;
  Chemist: string;
  Chevalier: string;
  Chopper: string;
  Cillian_the_Lucky: string;
  Coffin_Smasher: string;
  Coldheart: string;
  Commander: string;
  Confessor: string;
  Conquerer: string;
  Corpse_Collector: string;
  Corpulent_Cadaver: string;
  Courtier: string;
  Crimson_Helm: string;
  Crimson_Slayer: string;
  Crossbowman: string;
  Cruetraxa: string;
  Crusader: string;
  Crusher: string;
  Crypt_King_Graal: string;
  Crypt_Witch: string;
  Cudgeler: string;
  Cultist: string;
  Cupidus: string;
  Dark_Athel: string;
  Dark_Elhain: string;
  Daywalker: string;
  Dead_Crusader: string;
  Death_Hound: string;
  Deathchanter: string;
  Deathknight: string;
  Deathless: string;
  Defiled_Sinner: string;
  Delver: string;
  Dervish: string;
  Dhampir: string;
  Diabolist: string;
  Dilgol: string;
  Dolor_Lorekeeper: string;
  Doompriest: string;
  Doomscreech: string;
  Dracomorph: string;
  Draconis: string;
  Drake: string;
  Drexthar_Bloodtwin: string;
  Drokgul_the_Gaunt: string;
  Drowned_Bloatwraith: string;
  Duchess_Lilitu: string;
  Duelist: string;
  Dunestrider: string;
  Elder: string;
  Elder_Skarg: string;
  Elegaius: string;
  Elenaril: string;
  Elfguard: string;
  Elhain: string;
  Erinyes: string;
  Errol: string;
  Eviscerator: string;
  Excruciator: string;
  Executioner: string;
  Exemplar: string;
  Faceless: string;
  Fang_Cleric: string;
  Fayne: string;
  Fellhound: string;
  Fenax: string;
  Fencer: string;
  Fireblade: string;
  Flesh_Tearer: string;
  Flesheater: string;
  Fleshmonger: string;
  Flinger: string;
  Foli: string;
  Fortress_Goon: string;
  Frontline_Warrior: string;
  Frostbringer: string;
  Frostskin: string;
  Frozen_Banshee: string;
  Fu_Shan: string;
  Furystoker: string;
  Gala_Longbraids: string;
  Galek: string;
  Galkut: string;
  Gator: string;
  Ghostborn: string;
  Ghoulish_Ranger: string;
  Ghrush_the_Manglet: string;
  Gladiator: string;
  Gloril_Brutebane: string;
  Gnarlhorn: string;
  Golden_Reaper: string;
  Goremask: string;
  Gorgorab: string;
  Grandmaster: string;
  Grappler: string;
  Gravechill_Killer: string;
  Graybeard: string;
  Grimskin: string;
  Grinner: string;
  Grizzled_Jarl: string;
  Grohak_the_Bloodied: string;
  Grumbler: string;
  Guardian: string;
  Gurgoh_the_Augur: string;
  Gurptuk_Moss_Beard: string;
  Hakkorhn_Smashlord: string;
  Halberdier: string;
  Hardscale: string;
  Harrier: string;
  Haruspex: string;
  Harvest_Jack: string;
  Harvester: string;
  Hatchet_Slinger: string;
  Head_Taker: string;
  Headsman: string;
  Heartpiercer: string;
  Hegemon: string;
  Heiress: string;
  Hellfang: string;
  Hellgazer: string;
  Hellhound: string;
  Herald: string;
  Hexia: string;
  Hexweaver: string;
  High_Khatun: string;
  Hill_Nomad: string;
  Hollow: string;
  Honor_Guard: string;
  Hope: string;
  Hordin: string;
  Hospitaller: string;
  Hound_Spawn: string;
  Hungerer: string;
  Huntress: string;
  Hurler: string;
  Husk: string;
  Hyria: string;
  Ifrit: string;
  Ignatius: string;
  Incubus: string;
  Infernal_Baroness: string;
  Inithwe_Bloodtwin: string;
  Interceptor: string;
  Intercessor: string;
  Ironclad: string;
  Ithos: string;
  Jaeger: string;
  Jarang: string;
  Jareg: string;
  Jinglehunter: string;
  Jizoh: string;
  Jotun: string;
  Judge: string;
  Judicator: string;
  Juliana: string;
  Justiciar: string;
  Kael: string;
  Kaiden: string;
  Kallia: string;
  Kantra_the_Cyclone: string;
  Karam: string;
  Khoronar: string;
  Knecht: string;
  Knight_Errant: string;
  Krisk_the_Ageless: string;
  Kytis: string;
  Lady_Etessa: string;
  Lamellar: string;
  Lanakis_the_Chosen: string;
  Lemure: string;
  Lich: string;
  Lightsworn: string;
  Line_Infantry: string;
  Little_Miss_Annie: string;
  Longbeard: string;
  Lord_Champfort: string;
  Lord_Shazar: string;
  Lordly_Legionary: string;
  Lua: string;
  Lugan_the_Steadfast: string;
  Luria: string;
  Lurker: string;
  Luthiea: string;
  Lydia_the_Deathsiren: string;
  Lyssandra: string;
  Madame_Serris: string;
  Madman: string;
  Maeve: string;
  Magekiller: string;
  Magister: string;
  Magmablood: string;
  Magus: string;
  Maiden: string;
  Malbranche: string;
  Maneater: string;
  Marked: string;
  Marksman: string;
  Marquess: string;
  Marquis: string;
  Martyr: string;
  MaShalled: string;
  Masked_Fearmonger: string;
  Master_Butcher: string;
  Maulie_Tankard: string;
  Mausoleum_Mage: string;
  Metalshaper: string;
  Militia: string;
  Minaya: string;
  Miscreated_Monster: string;
  Missionary: string;
  Mistress_of_Hymns: string;
  Mortu_Macaab: string;
  Mother_Superior: string;
  Mountain_King: string;
  Muckstalker: string;
  Myrmidon: string;
  Mystic_Hand: string;
  Narma_the_Returned: string;
  Nazana: string;
  Necrohunter: string;
  Nethril: string;
  Norog: string;
  Novitiate: string;
  Oathbound: string;
  Occult_Brawler: string;
  Ogryn_Jailer: string;
  Oldbeard: string;
  Outlander: string;
  Outlaw_Monk: string;
  Outrider: string;
  Ox: string;
  Pain_Keeper: string;
  Painsmith: string;
  Paragon: string;
  Penitent: string;
  Perforator: string;
  Peydma: string;
  Pikeman: string;
  Pilgrim: string;
  Pit_Cur: string;
  Pit_Fighter: string;
  Pitiless_One: string;
  Pitspawn: string;
  Pounder: string;
  Preacher: string;
  Preserver: string;
  Prince_Kymar: string;
  Psylar: string;
  Purgator: string;
  Quaestor: string;
  Queen_Eva: string;
  Rae: string;
  Ragemonger: string;
  Raglin: string;
  Raider: string;
  Ranger: string;
  Rearguard_Sergeant: string;
  Redeemer: string;
  Reinbeast: string;
  Relickeeper: string;
  Reliquary_Tender: string;
  Renegade: string;
  Renouncer: string;
  Retainer: string;
  Rhazin_Scarhide: string;
  Richtoff_the_Bold: string;
  Ripper: string;
  Ripperfist: string;
  Ritualist: string;
  Robar: string;
  Rock_Breaker: string;
  Rocktooth: string;
  Romero: string;
  Roshcard_the_Tower: string;
  Rotos_the_Lost_Groom: string;
  Rotting_Mage: string;
  Rowan: string;
  Royal_Guard: string;
  Royal_Huntsman: string;
  Runic_Warder: string;
  Saito: string;
  Sanctum_Protector: string;
  Sandlashed_Survivor: string;
  Satyr: string;
  Saurus: string;
  Scyl_of_the_Drakes: string;
  Seducer: string;
  Seeker: string;
  Seer: string;
  Seneschal: string;
  Sentinel: string;
  Septimus: string;
  Sepulcher_Sentinel: string;
  Sergeant: string;
  Sethallia: string;
  Shaman: string;
  Shamrock: string;
  Sharpshooter: string;
  Shatterbones: string;
  Shieldguard: string;
  Shirimani: string;
  Siegebreaker: string;
  Sikara: string;
  Sinesha: string;
  Siphi_the_Lost_Bride: string;
  Sir_Nicholas: string;
  Sister_Militant: string;
  Skartorsis: string;
  Skellag: string;
  Skink: string;
  Skinner: string;
  Skirmisher: string;
  Skull_Lord_Var_Gall: string;
  Skullcrown: string;
  Skullcrusher: string;
  Skullsquire: string;
  Skullsworn: string;
  Skytouched_Shaman: string;
  Slasher: string;
  Slayer: string;
  Slicer: string;
  Slitherbrute: string;
  Sniper: string;
  Snorting_Thug: string;
  Solaris: string;
  Sorceress: string;
  Soulbond_Bowyer: string;
  Souldrinker: string;
  Soulless: string;
  Spider: string;
  Spikehead: string;
  Spirithost: string;
  Spiritwalker: string;
  Squire: string;
  Stag_Knight: string;
  Stalker: string;
  Stalwart: string;
  Steadfast_Marshal: string;
  Steel_Bowyer: string;
  Steelskull: string;
  Stitched_Beast: string;
  Stoneskin: string;
  Stout_Axeman: string;
  Suwai_Firstborn: string;
  Suzerain_Katonn: string;
  Swordsman: string;
  Tainix_Hateflower: string;
  Tallia: string;
  Taurus: string;
  Tayrel: string;
  Teela_Goremane: string;
  Templar: string;
  Temptress: string;
  Terrorbeast: string;
  Teshada: string;
  Thenasil: string;
  Theurgist: string;
  Thrall: string;
  Thrasher: string;
  Throatcutter: string;
  Tomb_Lord: string;
  Tormentor: string;
  Tormin_the_Cold: string;
  Torturehelm: string;
  Totem: string;
  Towering_Titan: string;
  Tracker: string;
  Treefeller: string;
  Troglodyte: string;
  Trunda_Giltmallet: string;
  Tuhak_the_Wanderer: string;
  Tunnel_Steward: string;
  Turvold: string;
  Twinclaw_Disciple: string;
  Tyrant_Ixlimor: string;
  Ultimate_Galek: string;
  Umbral_Enchantress: string;
  Ursine_Icecrusher: string;
  Ursine_Ironhide: string;
  Ursuga_Warcaller: string;
  Valerie: string;
  Valkyrie: string;
  Valla: string;
  Vanguard: string;
  Venus: string;
  Vergis: string;
  Vergumkaar: string;
  Veteran: string;
  Vigilante: string;
  Vilespawn: string;
  Visix_the_Unbowed: string;
  Vizier_Ovelis: string;
  Vrask: string;
  Vulpine: string;
  Wagonbane: string;
  Wanderer: string;
  War_Mother: string;
  Warboy: string;
  Warcaster: string;
  Warchanter: string;
  Warchief: string;
  Warden: string;
  Warlord: string;
  Warmaiden: string;
  Warpriest: string;
  Whisper: string;
  Windtalker: string;
  Witness: string;
  Woad_Painted: string;
  Word_Bearer: string;
  Wretch: string;
  Wurlim_Frostking: string;
  Wyvernbane: string;
  Yaga_the_Insatiable: string;
  Yannica: string;
  Yeoman: string;
  Zargala: string;
  Zavia: string;
  Zelotah: string;
  Zephyr_Sniper: string;
}

export interface ILanguageClan {
  BannerLords: string;
  HighElves: string;
  SacredOrder: string;
  OgrynTribes: string;
  LizardMen: string;
  Skinwalkers: string;
  Orcs: string;
  Demonspawn: string;
  UndeadHordes: string;
  DarkElves: string;
  KnightsRevenant: string;
  Barbarians: string;
  Dwarves: string;
}

export interface ILanguageMastery {
  BladeDisciple: string;
  DeadlyPrecision: string;
  HeartOfGlory: string;
  KeenStrike: string;
  ShieldBreaker: string;
  GrimResolve: string;
  SingleOut: string;
  LifeDrinker: string;
  WhirlwindOfDeath: string;
  RuthlessAmbush: string;
  BringItDown: string;
  WrathOfTheSlain: string;
  CycleOfViolence: string;
  Opportunist: string;
  Methodical: string;
  KillStreak: string;
  BloodShield: string;
  StokedToFury: string;
  Warmaster: string;
  Helmsmasher: string;
  GiantSlayer: string;
  FlawlessExecution: string;
  ToughSkin: string;
  Defiant: string;
  Blastproof: string;
  Rejuvenation: string;
  MightyEndurance: string;
  ImprovedParry: string;
  ShadowHeal: string;
  Resurgent: string;
  Bloodthirst: string;
  WisdomOfBattle: string;
  Solidarity: string;
  DelayDeath: string;
  HarvestDespair: string;
  Stubbornness: string;
  SelflessDefender: string;
  CycleOfRevenge: string;
  Retribution: string;
  Deterrence: string;
  IronSkin: string;
  Bulwark: string;
  FearsomePresence: string;
  Unshakeable: string;
  Steadfast: string;
  PinpointAccuracy: string;
  LayOnHands: string;
  Shieldbearer: string;
  ExaltInDeath: string;
  ChargedFocus: string;
  HealingSavior: string;
  RapidResponse: string;
  SwarmSmiter: string;
  ArcaneCelerity: string;
  MercifulAid: string;
  CycleOfMagic: string;
  LoreOfSteel: string;
  EvilEye: string;
  LastingGifts: string;
  SpiritHaste: string;
  Sniper: string;
  MasterHexer: string;
  ElixirOfLife: string;
  TimelyIntervention: string;
  Oppressor: string;
  EagleEye: string;
}

export interface ILanguageRarity {
  Common: string;
  Epic: string;
  Legendary: string;
  Rare: string;
  Uncommon: string;
}

export interface ILanguageRole {
  Attack: string;
  Defense: string;
  Support: string;
  HP: string;
}

export interface ILanguageSet {
  Accuracy: string;
  Avenging: string;
  CriticalDamage: string;
  CriticalRate: string;
  Cruel: string;
  Curing: string;
  Cursed: string;
  Daze: string;
  Defense: string;
  Deflection: string;
  Destroy: string;
  DivineCriticalRate: string;
  DivineLife: string;
  DivineOffense: string;
  DivineSpeed: string;
  Frenzy: string;
  Frost: string;
  Fury: string;
  Immortal: string;
  Immunity: string;
  Life: string;
  Lifesteal: string;
  Offense: string;
  Perception: string;
  Reflex: string;
  Regeneration: string;
  Relentless: string;
  Resilience: string;
  Resistance: string;
  Retaliation: string;
  Savage: string;
  Shield: string;
  Speed: string;
  Stalwart: string;
  Stun: string;
  SwiftParry: string;
  Taunting: string;
  Toxic: string;
}

export interface ILanguageSlot {
  Amulet: string;
  Banner: string;
  Boots: string;
  Chestplate: string;
  Gauntlets: string;
  Helmet: string;
  Ring: string;
  Shield: string;
  Weapon: string;
}

export interface ILanguageStat {
  ACC: string;
  ATK: string;
  "ATK%": string;
  "C.DMG": string;
  "C.RATE": string;
  DEF: string;
  "DEF%": string;
  HP: string;
  "HP%": string;
  RESI: string;
  SPD: string;
}

export interface ILanguageUiButton {
  exportBackup: string;
  generateCombination: string;
  importBackup: string;
  importRaidExtract: string;
  login: string;
  signup: string;
}

export interface ILanguageUiCommon {
  adding: string;
  addNew: string;
  browse: string;
  close: string;
  editing: string;
  no: string;
  off: string;
  on: string;
  optional: string;
  save: string;
  total: string;
  warning: string;
  yes: string;
}

export interface ILanguageUiMessage {
  accountExist: string;
  homeContribute: string;
  homeWarning: string;
  importOverrideData: string;
  loading: string;
  greatHallBonus: string;
  needAccount: string;
  raidExtractHelp: string;
}

export interface ILanguageUiOption {
  artifactsDisplayAsGrid: string;
  artifactsDisplayAsTable: string;
  chooseBackupFile: string;
  chooseJSONFile: string;
  excludeWornArtifacts: string;
  generationEasyMode: string;
  generationEasyModeHelper: string;
  generationRealValues: string;
  generationRealValuesHelper: string;
  generationTheoricalValues: string;
  generationTheoricalValuesHelper: string;
  group: string;
  groupAllChampions: string;
  methodNoSets: string;
  methodOptionalSets: string;
  methodRequiredSet: string;
  orderByAccuracy: string;
  orderByAffinity: string;
  orderByAttack: string;
  orderByCriticalDamage: string;
  orderByCriticalRate: string;
  orderByDefense: string;
  orderByFaction: string;
  orderByHP: string;
  orderByLevel: string;
  orderByPower: string;
  orderByRank: string;
  orderByResistance: string;
  orderByRole: string;
  orderBySpeed: string;
}

export interface ILanguageUiTask {
  generateTable: string;
}

export interface ILanguageUiTitle {
  accessories: string;
  actions: string;
  activeSets: string;
  arenaRank: string;
  artifacts: string;
  artifactsDisplayMode: string;
  availableAccessories: string;
  baseInfo: string;
  bonus: string;
  champion: string;
  champions: string;
  championsList: string;
  clan: string;
  config: string;
  email: string;
  emailConfirmation: string;
  gameProgression: string;
  generationMethods: string;
  generationOptions: string;
  greatHall: string;
  importExport: string;
  importBackup: string;
  importJSON: string;
  isActivated: string;
  isLocked: string;
  language: string;
  level: string;
  login: string;
  logout: string;
  mainStats: string;
  mainStatsValue: string;
  method: string;
  masteries: string;
  newStats: string;
  numberOfArtifacts: string;
  numberOfChampions: string;
  oldStats: string;
  optimizer: string;
  password: string;
  passwordConfirmation: string;
  power: string;
  powerHelper: string;
  profile: string;
  profileOptions: string;
  quality: string;
  rarity: string;
  results: string;
  rolls: string;
  runes: string;
  score: string;
  sellList: string;
  set: string;
  signup: string;
  siteDescription: string;
  siteTitle: string;
  slot: string;
  stat: string;
  statValue: string;
  stats1: string;
  stats2: string;
  stats3: string;
  stats4: string;
  statsPriority: string;
  teams: string;
  username: string;
}

export interface ILanguageUiValidation {
  correctErrorBeforeSaving: string;
  invalidLoginCredential: string;
  networkError: string;
  selectChampion: string;
  selectMethod: string;
  selectSets: string;
  selectStats: string;
  selectStatsBoots: string;
  selectStatsChestplate: string;
  selectStatsGauntlets: string;
}

export interface ILanguage {
  affinity: ILanguageAffinity;
  arena: ILangageArena;
  champion: ILanguageChampion;
  clan: ILanguageClan;
  masteries: ILanguageMastery;
  rarity: ILanguageRarity;
  role: ILanguageRole;
  set: ILanguageSet;
  slot: ILanguageSlot;
  stat: ILanguageStat & {
    short: ILanguageStat;
  };
  ui: {
    button: ILanguageUiButton;
    common: ILanguageUiCommon;
    message: ILanguageUiMessage;
    option: ILanguageUiOption;
    task: ILanguageUiTask;
    title: ILanguageUiTitle;
    validation: ILanguageUiValidation;
  };
}

/*const baseMap: ILanguage = JSON.parse(JSON.stringify(en), (_, value) => {
  if (typeof value === "string") {
    return `(NT) ${value}`;
  }

  return value;
});*/

//enUs: merge({}, baseMap, require('./loc/en-us.json') as IBPALanguage),

export const dictionaryList: { [key: string]: ILanguage } = {
  en: mergeDeep<ILanguage>(
    (baseMap as unknown) as ILanguage,
    (en as unknown) as ILanguage
  ),
  fr: mergeDeep<ILanguage>(
    (baseMap as unknown) as ILanguage,
    (fr as unknown) as ILanguage
  ),
};

export const languageOptions = {
  en: "English",
  fr: "Français",
};
